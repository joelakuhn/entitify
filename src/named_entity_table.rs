use std::collections::HashMap;

pub fn get_named_entities() ->  (HashMap::<u32, String>, HashMap::<String, u32>) {
    let mut by_cp = HashMap::<u32, String>::new();
    by_cp.insert(0x0024, String::from("&dollar;"));
    by_cp.insert(0x00A2, String::from("&cent;"));
    by_cp.insert(0x00A3, String::from("&pound;"));
    by_cp.insert(0x00A4, String::from("&curren;"));
    by_cp.insert(0x00A5, String::from("&yen;"));
    by_cp.insert(0x00A9, String::from("&copy;"));
    by_cp.insert(0x00AE, String::from("&reg;"));
    by_cp.insert(0x2122, String::from("&trade;"));
    by_cp.insert(0x0040, String::from("&commat;"));
    by_cp.insert(0x2102, String::from("&Copf;"));
    by_cp.insert(0x2105, String::from("&incare;"));
    by_cp.insert(0x210A, String::from("&gscr;"));
    by_cp.insert(0x210B, String::from("&hamilt;"));
    by_cp.insert(0x210C, String::from("&Hfr;"));
    by_cp.insert(0x210D, String::from("&Hopf;"));
    by_cp.insert(0x210E, String::from("&planckh;"));
    by_cp.insert(0x210F, String::from("&planck;"));
    by_cp.insert(0x2110, String::from("&Iscr;"));
    by_cp.insert(0x2111, String::from("&image;"));
    by_cp.insert(0x2112, String::from("&Lscr;"));
    by_cp.insert(0x2113, String::from("&ell;"));
    by_cp.insert(0x2115, String::from("&Nopf;"));
    by_cp.insert(0x2116, String::from("&numero;"));
    by_cp.insert(0x2117, String::from("&copysr;"));
    by_cp.insert(0x2118, String::from("&weierp;"));
    by_cp.insert(0x2119, String::from("&Popf;"));
    by_cp.insert(0x211A, String::from("&Qopf;"));
    by_cp.insert(0x211B, String::from("&Rscr;"));
    by_cp.insert(0x211C, String::from("&real;"));
    by_cp.insert(0x211D, String::from("&Ropf;"));
    by_cp.insert(0x211E, String::from("&rx;"));
    by_cp.insert(0x2124, String::from("&Zopf;"));
    by_cp.insert(0x2127, String::from("&mho;"));
    by_cp.insert(0x2128, String::from("&Zfr;"));
    by_cp.insert(0x2129, String::from("&iiota;"));
    by_cp.insert(0x212C, String::from("&bernou;"));
    by_cp.insert(0x212D, String::from("&Cfr;"));
    by_cp.insert(0x212F, String::from("&escr;"));
    by_cp.insert(0x2130, String::from("&Escr;"));
    by_cp.insert(0x2131, String::from("&Fscr;"));
    by_cp.insert(0x2133, String::from("&Mscr;"));
    by_cp.insert(0x2134, String::from("&oscr;"));
    by_cp.insert(0x2135, String::from("&alefsym;"));
    by_cp.insert(0x2136, String::from("&beth;"));
    by_cp.insert(0x2137, String::from("&gimel;"));
    by_cp.insert(0x2138, String::from("&daleth;"));
    by_cp.insert(0x2145, String::from("&DD;"));
    by_cp.insert(0x2146, String::from("&dd;"));
    by_cp.insert(0x2147, String::from("&ee;"));
    by_cp.insert(0x2148, String::from("&ii;"));
    by_cp.insert(0x2605, String::from("&starf;"));
    by_cp.insert(0x2606, String::from("&star;"));
    by_cp.insert(0x260E, String::from("&phone;"));
    by_cp.insert(0x2640, String::from("&female;"));
    by_cp.insert(0x2642, String::from("&male;"));
    by_cp.insert(0x2660, String::from("&spades;"));
    by_cp.insert(0x2663, String::from("&clubs;"));
    by_cp.insert(0x2665, String::from("&hearts;"));
    by_cp.insert(0x2666, String::from("&diams;"));
    by_cp.insert(0x25CA, String::from("&loz;"));
    by_cp.insert(0x266A, String::from("&sung;"));
    by_cp.insert(0x266D, String::from("&flat;"));
    by_cp.insert(0x266E, String::from("&natural;"));
    by_cp.insert(0x266F, String::from("&sharp;"));
    by_cp.insert(0x2713, String::from("&check;"));
    by_cp.insert(0x2717, String::from("&cross;"));
    by_cp.insert(0x2720, String::from("&malt;"));
    by_cp.insert(0x2736, String::from("&sext;"));
    by_cp.insert(0x2758, String::from("&VerticalSeparator;"));
    by_cp.insert(0x2772, String::from("&lbbrk;"));
    by_cp.insert(0x2773, String::from("&rbbrk;"));
    by_cp.insert(0x0021, String::from("&excl;"));
    by_cp.insert(0x0023, String::from("&num;"));
    by_cp.insert(0x0025, String::from("&percnt;"));
    by_cp.insert(0x0026, String::from("&amp;"));
    by_cp.insert(0x0028, String::from("&lpar;"));
    by_cp.insert(0x0029, String::from("&rpar;"));
    by_cp.insert(0x002A, String::from("&ast;"));
    by_cp.insert(0x002C, String::from("&comma;"));
    by_cp.insert(0x002E, String::from("&period;"));
    by_cp.insert(0x002F, String::from("&sol;"));
    by_cp.insert(0x003A, String::from("&colon;"));
    by_cp.insert(0x003B, String::from("&semi;"));
    by_cp.insert(0x003F, String::from("&quest;"));
    by_cp.insert(0x005B, String::from("&lbrack;"));
    by_cp.insert(0x005C, String::from("&bsol;"));
    by_cp.insert(0x005D, String::from("&rbrack;"));
    by_cp.insert(0x005E, String::from("&Hat;"));
    by_cp.insert(0x005F, String::from("&lowbar;"));
    by_cp.insert(0x0060, String::from("&grave;"));
    by_cp.insert(0x007B, String::from("&lbrace;"));
    by_cp.insert(0x007C, String::from("&vert;"));
    by_cp.insert(0x007D, String::from("&rbrace;"));
    by_cp.insert(0x007E, String::from("&tilde;"));
    by_cp.insert(0x02C6, String::from("&circ;"));
    by_cp.insert(0x00A0, String::from("&nbsp;"));
    by_cp.insert(0x2002, String::from("&ensp;"));
    by_cp.insert(0x2003, String::from("&emsp;"));
    by_cp.insert(0x2009, String::from("&thinsp;"));
    by_cp.insert(0x200C, String::from("&zwnj;"));
    by_cp.insert(0x200D, String::from("&zwj;"));
    by_cp.insert(0x200E, String::from("&lrm;"));
    by_cp.insert(0x200F, String::from("&rlm;"));
    by_cp.insert(0x00A1, String::from("&iexcl;"));
    by_cp.insert(0x00A6, String::from("&brvbar;"));
    by_cp.insert(0x00A7, String::from("&sect;"));
    by_cp.insert(0x00A8, String::from("&uml;"));
    by_cp.insert(0x00AA, String::from("&ordf;"));
    by_cp.insert(0x00AC, String::from("&not;"));
    by_cp.insert(0x00AD, String::from("&shy;"));
    by_cp.insert(0x00AF, String::from("&macr;"));
    by_cp.insert(0x00B2, String::from("&sup2;"));
    by_cp.insert(0x00B3, String::from("&sup3;"));
    by_cp.insert(0x00B4, String::from("&acute;"));
    by_cp.insert(0x00B5, String::from("&micro;"));
    by_cp.insert(0x00B6, String::from("&para;"));
    by_cp.insert(0x00B7, String::from("&middot;"));
    by_cp.insert(0x00B8, String::from("&cedil;"));
    by_cp.insert(0x00B9, String::from("&sup1;"));
    by_cp.insert(0x00BA, String::from("&ordm;"));
    by_cp.insert(0x00BF, String::from("&iquest;"));
    by_cp.insert(0x2010, String::from("&hyphen;"));
    by_cp.insert(0x2013, String::from("&ndash;"));
    by_cp.insert(0x2014, String::from("&mdash;"));
    by_cp.insert(0x2015, String::from("&horbar;"));
    by_cp.insert(0x2016, String::from("&Vert;"));
    by_cp.insert(0x2020, String::from("&dagger;"));
    by_cp.insert(0x2021, String::from("&Dagger;"));
    by_cp.insert(0x2022, String::from("&bull;"));
    by_cp.insert(0x2025, String::from("&nldr;"));
    by_cp.insert(0x2026, String::from("&hellip;"));
    by_cp.insert(0x2030, String::from("&;"));
    by_cp.insert(0x2031, String::from("&pertenk;"));
    by_cp.insert(0x2032, String::from("&prime;"));
    by_cp.insert(0x2033, String::from("&Prime;"));
    by_cp.insert(0x2034, String::from("&tprime;"));
    by_cp.insert(0x2035, String::from("&bprime;"));
    by_cp.insert(0x203E, String::from("&oline;"));
    by_cp.insert(0x2041, String::from("&caret;"));
    by_cp.insert(0x2043, String::from("&hybull;"));
    by_cp.insert(0x2044, String::from("&frasl;"));
    by_cp.insert(0x204F, String::from("&bsemi;"));
    by_cp.insert(0x2057, String::from("&qprime;"));
    by_cp.insert(0x0022, String::from("&quot;"));
    by_cp.insert(0x0027, String::from("&apos;"));
    by_cp.insert(0x00AB, String::from("&laquo;"));
    by_cp.insert(0x00BB, String::from("&raquo;"));
    by_cp.insert(0x2018, String::from("&lsquo;"));
    by_cp.insert(0x2019, String::from("&rsquo;"));
    by_cp.insert(0x201A, String::from("&sbquo;"));
    by_cp.insert(0x201C, String::from("&ldquo;"));
    by_cp.insert(0x201D, String::from("&rdquo;"));
    by_cp.insert(0x201E, String::from("&bdquo;"));
    by_cp.insert(0x2039, String::from("&lsaquo;"));
    by_cp.insert(0x203A, String::from("&rsaquo;"));
    by_cp.insert(0x00BC, String::from("&frac14;"));
    by_cp.insert(0x00BD, String::from("&frac12;"));
    by_cp.insert(0x00BE, String::from("&frac34;"));
    by_cp.insert(0x2153, String::from("&frac13;"));
    by_cp.insert(0x2154, String::from("&frac23;"));
    by_cp.insert(0x2155, String::from("&frac15;"));
    by_cp.insert(0x2156, String::from("&frac25;"));
    by_cp.insert(0x2157, String::from("&frac35;"));
    by_cp.insert(0x2158, String::from("&frac45;"));
    by_cp.insert(0x2159, String::from("&frac16;"));
    by_cp.insert(0x215A, String::from("&frac56;"));
    by_cp.insert(0x215B, String::from("&frac18;"));
    by_cp.insert(0x215C, String::from("&frac38;"));
    by_cp.insert(0x215D, String::from("&frac58;"));
    by_cp.insert(0x215E, String::from("&frac78;"));
    by_cp.insert(0x002B, String::from("&plus;"));
    by_cp.insert(0x2212, String::from("&minus;"));
    by_cp.insert(0x00D7, String::from("&times;"));
    by_cp.insert(0x00F7, String::from("&divide;"));
    by_cp.insert(0x003D, String::from("&equals;"));
    by_cp.insert(0x2260, String::from("&ne;"));
    by_cp.insert(0x00B1, String::from("&plusmn;"));
    by_cp.insert(0x00AC, String::from("&not;"));
    by_cp.insert(0x003C, String::from("&lt;"));
    by_cp.insert(0x003E, String::from("&gt;"));
    by_cp.insert(0x00B0, String::from("&deg;"));
    by_cp.insert(0x00B9, String::from("&sup1;"));
    by_cp.insert(0x00B2, String::from("&sup2;"));
    by_cp.insert(0x00B3, String::from("&sup3;"));
    by_cp.insert(0x0192, String::from("&fnof;"));
    by_cp.insert(0x0025, String::from("&percnt;"));
    by_cp.insert(0x0089, String::from("&permil;"));
    by_cp.insert(0x2031, String::from("&pertenk;"));
    by_cp.insert(0x2200, String::from("&forall;"));
    by_cp.insert(0x2201, String::from("&comp;"));
    by_cp.insert(0x2202, String::from("&part;"));
    by_cp.insert(0x2203, String::from("&exist;"));
    by_cp.insert(0x2204, String::from("&nexist;"));
    by_cp.insert(0x2205, String::from("&empty;"));
    by_cp.insert(0x2207, String::from("&nabla;"));
    by_cp.insert(0x2208, String::from("&isin;"));
    by_cp.insert(0x2209, String::from("&notin;"));
    by_cp.insert(0x220B, String::from("&ni;"));
    by_cp.insert(0x220C, String::from("&notni;"));
    by_cp.insert(0x220F, String::from("&prod;"));
    by_cp.insert(0x2210, String::from("&coprod;"));
    by_cp.insert(0x2211, String::from("&sum;"));
    by_cp.insert(0x2213, String::from("&mnplus;"));
    by_cp.insert(0x2214, String::from("&plusdo;"));
    by_cp.insert(0x2216, String::from("&setminus;"));
    by_cp.insert(0x2217, String::from("&lowast;"));
    by_cp.insert(0x2218, String::from("&compfn;"));
    by_cp.insert(0x221A, String::from("&radic;"));
    by_cp.insert(0x221D, String::from("&prop;"));
    by_cp.insert(0x221E, String::from("&infin;"));
    by_cp.insert(0x221F, String::from("&angrt;"));
    by_cp.insert(0x2220, String::from("&ang;"));
    by_cp.insert(0x2221, String::from("&angmsd;"));
    by_cp.insert(0x2222, String::from("&angsph;"));
    by_cp.insert(0x2223, String::from("&mid;"));
    by_cp.insert(0x2224, String::from("&nmid;"));
    by_cp.insert(0x2225, String::from("&parallel;"));
    by_cp.insert(0x2226, String::from("&npar;"));
    by_cp.insert(0x2227, String::from("&and;"));
    by_cp.insert(0x2228, String::from("&or;"));
    by_cp.insert(0x2229, String::from("&cap;"));
    by_cp.insert(0x222A, String::from("&cup;"));
    by_cp.insert(0x222B, String::from("&int;"));
    by_cp.insert(0x222C, String::from("&Int;"));
    by_cp.insert(0x222D, String::from("&iiint;"));
    by_cp.insert(0x222E, String::from("&conint;"));
    by_cp.insert(0x222F, String::from("&Conint;"));
    by_cp.insert(0x2230, String::from("&Cconint;"));
    by_cp.insert(0x2231, String::from("&cwint;"));
    by_cp.insert(0x2232, String::from("&cwconint;"));
    by_cp.insert(0x2233, String::from("&awconint;"));
    by_cp.insert(0x2234, String::from("&there4;"));
    by_cp.insert(0x2235, String::from("&because;"));
    by_cp.insert(0x2236, String::from("&ratio;"));
    by_cp.insert(0x2237, String::from("&Colon;"));
    by_cp.insert(0x2238, String::from("&minusd;"));
    by_cp.insert(0x223A, String::from("&mDDot;"));
    by_cp.insert(0x223B, String::from("&homtht;"));
    by_cp.insert(0x223C, String::from("&sim;"));
    by_cp.insert(0x223D, String::from("&bsim;"));
    by_cp.insert(0x223E, String::from("&ac;"));
    by_cp.insert(0x223F, String::from("&acd;"));
    by_cp.insert(0x2240, String::from("&wreath;"));
    by_cp.insert(0x2241, String::from("&nsim;"));
    by_cp.insert(0x2242, String::from("&esim;"));
    by_cp.insert(0x2243, String::from("&sime;"));
    by_cp.insert(0x2244, String::from("&nsime;"));
    by_cp.insert(0x2245, String::from("&cong;"));
    by_cp.insert(0x2246, String::from("&simne;"));
    by_cp.insert(0x2247, String::from("&ncong;"));
    by_cp.insert(0x2248, String::from("&asymp;"));
    by_cp.insert(0x2249, String::from("&nap;"));
    by_cp.insert(0x224A, String::from("&approxeq;"));
    by_cp.insert(0x224B, String::from("&apid;"));
    by_cp.insert(0x224C, String::from("&bcong;"));
    by_cp.insert(0x224D, String::from("&asympeq;"));
    by_cp.insert(0x224E, String::from("&bump;"));
    by_cp.insert(0x224F, String::from("&bumpe;"));
    by_cp.insert(0x2250, String::from("&esdot;"));
    by_cp.insert(0x2251, String::from("&eDot;"));
    by_cp.insert(0x2252, String::from("&efDot;"));
    by_cp.insert(0x2253, String::from("&erDot;"));
    by_cp.insert(0x2254, String::from("&colone;"));
    by_cp.insert(0x2255, String::from("&ecolon;"));
    by_cp.insert(0x2256, String::from("&ecir;"));
    by_cp.insert(0x2257, String::from("&cire;"));
    by_cp.insert(0x2259, String::from("&wedgeq;"));
    by_cp.insert(0x225A, String::from("&veeeq;"));
    by_cp.insert(0x225C, String::from("&trie;"));
    by_cp.insert(0x225F, String::from("&equest;"));
    by_cp.insert(0x2261, String::from("&equiv;"));
    by_cp.insert(0x2262, String::from("&nequiv;"));
    by_cp.insert(0x2264, String::from("&le;"));
    by_cp.insert(0x2265, String::from("&ge;"));
    by_cp.insert(0x2266, String::from("&lE;"));
    by_cp.insert(0x2267, String::from("&gE;"));
    by_cp.insert(0x2268, String::from("&lnE;"));
    by_cp.insert(0x2269, String::from("&gnE;"));
    by_cp.insert(0x226A, String::from("&Lt;"));
    by_cp.insert(0x226B, String::from("&Gt;"));
    by_cp.insert(0x226C, String::from("&between;"));
    by_cp.insert(0x226D, String::from("&NotCupCap;"));
    by_cp.insert(0x226E, String::from("&nlt;"));
    by_cp.insert(0x226F, String::from("&ngt;"));
    by_cp.insert(0x2270, String::from("&nle;"));
    by_cp.insert(0x2271, String::from("&nge;"));
    by_cp.insert(0x2272, String::from("&lsim;"));
    by_cp.insert(0x2273, String::from("&gsim;"));
    by_cp.insert(0x2274, String::from("&nlsim;"));
    by_cp.insert(0x2275, String::from("&ngsim;"));
    by_cp.insert(0x2276, String::from("&lg;"));
    by_cp.insert(0x2277, String::from("&gl;"));
    by_cp.insert(0x2278, String::from("&ntlg;"));
    by_cp.insert(0x2279, String::from("&ntgl;"));
    by_cp.insert(0x227A, String::from("&pr;"));
    by_cp.insert(0x227B, String::from("&sc;"));
    by_cp.insert(0x227C, String::from("&prcue;"));
    by_cp.insert(0x227D, String::from("&sccue;"));
    by_cp.insert(0x227E, String::from("&prsim;"));
    by_cp.insert(0x227F, String::from("&scsim;"));
    by_cp.insert(0x2280, String::from("&npr;"));
    by_cp.insert(0x2281, String::from("&nsc;"));
    by_cp.insert(0x2282, String::from("&sub;"));
    by_cp.insert(0x2283, String::from("&sup;"));
    by_cp.insert(0x2284, String::from("&nsub;"));
    by_cp.insert(0x2285, String::from("&nsup;"));
    by_cp.insert(0x2286, String::from("&sube;"));
    by_cp.insert(0x2287, String::from("&supe;"));
    by_cp.insert(0x2288, String::from("&nsube;"));
    by_cp.insert(0x2289, String::from("&nsupe;"));
    by_cp.insert(0x228A, String::from("&subne;"));
    by_cp.insert(0x228B, String::from("&supne;"));
    by_cp.insert(0x228D, String::from("&cupdot;"));
    by_cp.insert(0x228E, String::from("&uplus;"));
    by_cp.insert(0x228F, String::from("&sqsub;"));
    by_cp.insert(0x2290, String::from("&sqsup;"));
    by_cp.insert(0x2291, String::from("&sqsube;"));
    by_cp.insert(0x2292, String::from("&sqsupe;"));
    by_cp.insert(0x2293, String::from("&sqcap;"));
    by_cp.insert(0x2294, String::from("&sqcup;"));
    by_cp.insert(0x2295, String::from("&oplus;"));
    by_cp.insert(0x2296, String::from("&ominus;"));
    by_cp.insert(0x2297, String::from("&otimes;"));
    by_cp.insert(0x2298, String::from("&osol;"));
    by_cp.insert(0x2299, String::from("&odot;"));
    by_cp.insert(0x229A, String::from("&ocir;"));
    by_cp.insert(0x229B, String::from("&oast;"));
    by_cp.insert(0x229D, String::from("&odash;"));
    by_cp.insert(0x229E, String::from("&plusb;"));
    by_cp.insert(0x229F, String::from("&minusb;"));
    by_cp.insert(0x22A0, String::from("&timesb;"));
    by_cp.insert(0x22A1, String::from("&sdotb;"));
    by_cp.insert(0x22A2, String::from("&vdash;"));
    by_cp.insert(0x22A3, String::from("&dashv;"));
    by_cp.insert(0x22A4, String::from("&top;"));
    by_cp.insert(0x22A5, String::from("&perp;"));
    by_cp.insert(0x22A7, String::from("&models;"));
    by_cp.insert(0x22A8, String::from("&vDash;"));
    by_cp.insert(0x22A9, String::from("&Vdash;"));
    by_cp.insert(0x22AA, String::from("&Vvdash;"));
    by_cp.insert(0x22AB, String::from("&VDash;"));
    by_cp.insert(0x22AC, String::from("&nvdash;"));
    by_cp.insert(0x22AD, String::from("&nvDash;"));
    by_cp.insert(0x22AE, String::from("&nVdash;"));
    by_cp.insert(0x22AF, String::from("&nVDash;"));
    by_cp.insert(0x22B0, String::from("&prurel;"));
    by_cp.insert(0x22B2, String::from("&vltri;"));
    by_cp.insert(0x22B3, String::from("&vrtri;"));
    by_cp.insert(0x22B4, String::from("&ltrie;"));
    by_cp.insert(0x22B5, String::from("&rtrie;"));
    by_cp.insert(0x22B6, String::from("&origof;"));
    by_cp.insert(0x22B7, String::from("&imof;"));
    by_cp.insert(0x22B8, String::from("&mumap;"));
    by_cp.insert(0x22B9, String::from("&hercon;"));
    by_cp.insert(0x22BA, String::from("&intcal;"));
    by_cp.insert(0x22BB, String::from("&veebar;"));
    by_cp.insert(0x22BD, String::from("&barvee;"));
    by_cp.insert(0x22BE, String::from("&angrtvb;"));
    by_cp.insert(0x22BF, String::from("&lrtri;"));
    by_cp.insert(0x22C0, String::from("&xwedge;"));
    by_cp.insert(0x22C1, String::from("&xvee;"));
    by_cp.insert(0x22C2, String::from("&xcap;"));
    by_cp.insert(0x22C3, String::from("&xcup;"));
    by_cp.insert(0x22C4, String::from("&diamond;"));
    by_cp.insert(0x22C5, String::from("&sdot;"));
    by_cp.insert(0x22C6, String::from("&Star;"));
    by_cp.insert(0x22C7, String::from("&divonx;"));
    by_cp.insert(0x22C8, String::from("&bowtie;"));
    by_cp.insert(0x22C9, String::from("&ltimes;"));
    by_cp.insert(0x22CA, String::from("&rtimes;"));
    by_cp.insert(0x22CB, String::from("&lthree;"));
    by_cp.insert(0x22CC, String::from("&rthree;"));
    by_cp.insert(0x22CD, String::from("&bsime;"));
    by_cp.insert(0x22CE, String::from("&cuvee;"));
    by_cp.insert(0x22CF, String::from("&cuwed;"));
    by_cp.insert(0x22D0, String::from("&Sub;"));
    by_cp.insert(0x22D1, String::from("&Sup;"));
    by_cp.insert(0x22D2, String::from("&Cap;"));
    by_cp.insert(0x22D3, String::from("&Cup;"));
    by_cp.insert(0x22D4, String::from("&fork;"));
    by_cp.insert(0x22D5, String::from("&epar;"));
    by_cp.insert(0x22D6, String::from("&ltdot;"));
    by_cp.insert(0x22D7, String::from("&gtdot;"));
    by_cp.insert(0x22D8, String::from("&Ll;"));
    by_cp.insert(0x22D9, String::from("&Gg;"));
    by_cp.insert(0x22DA, String::from("&leg;"));
    by_cp.insert(0x22DB, String::from("&gel;"));
    by_cp.insert(0x22DE, String::from("&cuepr;"));
    by_cp.insert(0x22DF, String::from("&cuesc;"));
    by_cp.insert(0x22E0, String::from("&nprcue;"));
    by_cp.insert(0x22E1, String::from("&nsccue;"));
    by_cp.insert(0x22E2, String::from("&nsqsube;"));
    by_cp.insert(0x22E3, String::from("&nsqsupe;"));
    by_cp.insert(0x22E6, String::from("&lnsim;"));
    by_cp.insert(0x22E7, String::from("&gnsim;"));
    by_cp.insert(0x22E8, String::from("&prnsim;"));
    by_cp.insert(0x22E9, String::from("&scnsim;"));
    by_cp.insert(0x22EA, String::from("&nltri;"));
    by_cp.insert(0x22EB, String::from("&nrtri;"));
    by_cp.insert(0x22EC, String::from("&nltrie;"));
    by_cp.insert(0x22ED, String::from("&nrtrie;"));
    by_cp.insert(0x22EE, String::from("&vellip;"));
    by_cp.insert(0x22EF, String::from("&ctdot;"));
    by_cp.insert(0x22F0, String::from("&utdot;"));
    by_cp.insert(0x22F1, String::from("&dtdot;"));
    by_cp.insert(0x22F2, String::from("&disin;"));
    by_cp.insert(0x22F3, String::from("&isinsv;"));
    by_cp.insert(0x22F4, String::from("&isins;"));
    by_cp.insert(0x22F5, String::from("&isindot;"));
    by_cp.insert(0x22F6, String::from("&notinvc;"));
    by_cp.insert(0x22F7, String::from("&notinvb;"));
    by_cp.insert(0x22F9, String::from("&isinE;"));
    by_cp.insert(0x22FA, String::from("&nisd;"));
    by_cp.insert(0x22FB, String::from("&xnis;"));
    by_cp.insert(0x22FC, String::from("&nis;"));
    by_cp.insert(0x22FD, String::from("&notnivc;"));
    by_cp.insert(0x22FE, String::from("&notnivb;"));
    by_cp.insert(0x2308, String::from("&lceil;"));
    by_cp.insert(0x2309, String::from("&rceil;"));
    by_cp.insert(0x230A, String::from("&lfloor;"));
    by_cp.insert(0x230B, String::from("&rfloor;"));
    by_cp.insert(0x2329, String::from("&lang;"));
    by_cp.insert(0x232A, String::from("&rang;"));
    by_cp.insert(0x0391, String::from("&Alpha;"));
    by_cp.insert(0x0392, String::from("&Beta;"));
    by_cp.insert(0x0393, String::from("&Gamma;"));
    by_cp.insert(0x0394, String::from("&Delta;"));
    by_cp.insert(0x0395, String::from("&Epsilon;"));
    by_cp.insert(0x0396, String::from("&Zeta;"));
    by_cp.insert(0x0397, String::from("&Eta;"));
    by_cp.insert(0x0398, String::from("&Theta;"));
    by_cp.insert(0x0399, String::from("&Iota;"));
    by_cp.insert(0x039A, String::from("&Kappa;"));
    by_cp.insert(0x039B, String::from("&Lambda;"));
    by_cp.insert(0x039C, String::from("&Mu;"));
    by_cp.insert(0x039D, String::from("&Nu;"));
    by_cp.insert(0x039E, String::from("&Xi;"));
    by_cp.insert(0x039F, String::from("&Omicron;"));
    by_cp.insert(0x03A0, String::from("&Pi;"));
    by_cp.insert(0x03A1, String::from("&Rho;"));
    by_cp.insert(0x03A3, String::from("&Sigma;"));
    by_cp.insert(0x03A4, String::from("&Tau;"));
    by_cp.insert(0x03A5, String::from("&Upsilon;"));
    by_cp.insert(0x03A6, String::from("&Phi;"));
    by_cp.insert(0x03A7, String::from("&Chi;"));
    by_cp.insert(0x03A8, String::from("&Psi;"));
    by_cp.insert(0x03A9, String::from("&Omega;"));
    by_cp.insert(0x03B1, String::from("&alpha;"));
    by_cp.insert(0x03B2, String::from("&beta;"));
    by_cp.insert(0x03B3, String::from("&gamma;"));
    by_cp.insert(0x03B4, String::from("&delta;"));
    by_cp.insert(0x03B5, String::from("&epsilon;"));
    by_cp.insert(0x03B6, String::from("&zeta;"));
    by_cp.insert(0x03B7, String::from("&eta;"));
    by_cp.insert(0x03B8, String::from("&theta;"));
    by_cp.insert(0x03B9, String::from("&iota;"));
    by_cp.insert(0x03BA, String::from("&kappa;"));
    by_cp.insert(0x03BB, String::from("&lambda;"));
    by_cp.insert(0x03BC, String::from("&mu;"));
    by_cp.insert(0x03BD, String::from("&nu;"));
    by_cp.insert(0x03BE, String::from("&xi;"));
    by_cp.insert(0x03BF, String::from("&omicron;"));
    by_cp.insert(0x03C0, String::from("&pi;"));
    by_cp.insert(0x03C1, String::from("&rho;"));
    by_cp.insert(0x03C2, String::from("&sigmaf;"));
    by_cp.insert(0x03C3, String::from("&sigma;"));
    by_cp.insert(0x03C4, String::from("&tau;"));
    by_cp.insert(0x03C5, String::from("&upsilon;"));
    by_cp.insert(0x03C6, String::from("&phi;"));
    by_cp.insert(0x03C7, String::from("&chi;"));
    by_cp.insert(0x03C8, String::from("&psi;"));
    by_cp.insert(0x03C9, String::from("&omega;"));
    by_cp.insert(0x03D1, String::from("&thetasym;"));
    by_cp.insert(0x03D2, String::from("&upsih;"));
    by_cp.insert(0x03D6, String::from("&piv;"));
    by_cp.insert(0x00C0, String::from("&Agrave;"));
    by_cp.insert(0x00C1, String::from("&Aacute;"));
    by_cp.insert(0x00C2, String::from("&Acirc;"));
    by_cp.insert(0x00C3, String::from("&Atilde;"));
    by_cp.insert(0x00C4, String::from("&Auml;"));
    by_cp.insert(0x00C5, String::from("&Aring;"));
    by_cp.insert(0x00C6, String::from("&AElig;"));
    by_cp.insert(0x00C7, String::from("&Ccedil;"));
    by_cp.insert(0x00C8, String::from("&Egrave;"));
    by_cp.insert(0x00C9, String::from("&Eacute;"));
    by_cp.insert(0x00CA, String::from("&Ecirc;"));
    by_cp.insert(0x00CB, String::from("&Euml;"));
    by_cp.insert(0x00CC, String::from("&Lgrave;"));
    by_cp.insert(0x0139, String::from("&Lacute;"));
    by_cp.insert(0x00CE, String::from("&Lcirc;"));
    by_cp.insert(0x00CF, String::from("&Luml;"));
    by_cp.insert(0x00D0, String::from("&ETH;"));
    by_cp.insert(0x00D1, String::from("&Ntilde;"));
    by_cp.insert(0x00D2, String::from("&Ograve;"));
    by_cp.insert(0x00D3, String::from("&Oacute;"));
    by_cp.insert(0x00D4, String::from("&Ocirc;"));
    by_cp.insert(0x00D5, String::from("&Otilde;"));
    by_cp.insert(0x00D6, String::from("&Ouml;"));
    by_cp.insert(0x00D8, String::from("&Oslash;"));
    by_cp.insert(0x00D9, String::from("&Ugrave;"));
    by_cp.insert(0x00DA, String::from("&Uacute;"));
    by_cp.insert(0x00DB, String::from("&Ucirc;"));
    by_cp.insert(0x00DC, String::from("&Uuml;"));
    by_cp.insert(0x00DD, String::from("&Yacute;"));
    by_cp.insert(0x00DE, String::from("&THORN;"));
    by_cp.insert(0x00DF, String::from("&szlig;"));
    by_cp.insert(0x00E0, String::from("&agrave;"));
    by_cp.insert(0x00E1, String::from("&aacute;"));
    by_cp.insert(0x00E2, String::from("&acirc;"));
    by_cp.insert(0x00E3, String::from("&atilde;"));
    by_cp.insert(0x00E4, String::from("&auml;"));
    by_cp.insert(0x00E5, String::from("&aring;"));
    by_cp.insert(0x00E6, String::from("&aelig;"));
    by_cp.insert(0x00E7, String::from("&ccedil;"));
    by_cp.insert(0x00E8, String::from("&egrave;"));
    by_cp.insert(0x00E9, String::from("&eacute;"));
    by_cp.insert(0x00EA, String::from("&ecirc;"));
    by_cp.insert(0x00EB, String::from("&euml;"));
    by_cp.insert(0x00EC, String::from("&igrave;"));
    by_cp.insert(0x00ED, String::from("&iacute;"));
    by_cp.insert(0x00EE, String::from("&icirc;"));
    by_cp.insert(0x00EF, String::from("&iuml;"));
    by_cp.insert(0x00F0, String::from("&eth;"));
    by_cp.insert(0x00F1, String::from("&ntilde;"));
    by_cp.insert(0x00F2, String::from("&ograve;"));
    by_cp.insert(0x00F3, String::from("&oacute;"));
    by_cp.insert(0x00F4, String::from("&ocirc;"));
    by_cp.insert(0x00F5, String::from("&otilde;"));
    by_cp.insert(0x00F6, String::from("&ouml;"));
    by_cp.insert(0x00F8, String::from("&oslash;"));
    by_cp.insert(0x00F9, String::from("&ugrave;"));
    by_cp.insert(0x00FA, String::from("&uacute;"));
    by_cp.insert(0x00FB, String::from("&ucirc;"));
    by_cp.insert(0x00FC, String::from("&uuml;"));
    by_cp.insert(0x00FD, String::from("&yacute;"));
    by_cp.insert(0x00FE, String::from("&thorn;"));
    by_cp.insert(0x00FF, String::from("&yuml;"));
    by_cp.insert(0x0100, String::from("&Amacr;"));
    by_cp.insert(0x0101, String::from("&amacr;"));
    by_cp.insert(0x0102, String::from("&Abreve;"));
    by_cp.insert(0x0103, String::from("&abreve;"));
    by_cp.insert(0x0104, String::from("&Aogon;"));
    by_cp.insert(0x0105, String::from("&aogon;"));
    by_cp.insert(0x0106, String::from("&Cacute;"));
    by_cp.insert(0x0107, String::from("&cacute;"));
    by_cp.insert(0x0108, String::from("&Ccirc;"));
    by_cp.insert(0x0109, String::from("&ccirc;"));
    by_cp.insert(0x010A, String::from("&Cdot;"));
    by_cp.insert(0x010B, String::from("&cdot;"));
    by_cp.insert(0x010C, String::from("&Ccaron;"));
    by_cp.insert(0x010D, String::from("&ccaron;"));
    by_cp.insert(0x010E, String::from("&Dcaron;"));
    by_cp.insert(0x010F, String::from("&dcaron;"));
    by_cp.insert(0x0110, String::from("&Dstrok;"));
    by_cp.insert(0x0111, String::from("&dstrok;"));
    by_cp.insert(0x0112, String::from("&Emacr;"));
    by_cp.insert(0x0113, String::from("&emacr;"));
    by_cp.insert(0x0116, String::from("&Edot;"));
    by_cp.insert(0x0117, String::from("&edot;"));
    by_cp.insert(0x0118, String::from("&Eogon;"));
    by_cp.insert(0x0119, String::from("&eogon;"));
    by_cp.insert(0x011A, String::from("&Ecaron;"));
    by_cp.insert(0x011B, String::from("&ecaron;"));
    by_cp.insert(0x011C, String::from("&Gcirc;"));
    by_cp.insert(0x011D, String::from("&gcirc;"));
    by_cp.insert(0x011E, String::from("&Gbreve;"));
    by_cp.insert(0x011F, String::from("&gbreve;"));
    by_cp.insert(0x0120, String::from("&Gdot;"));
    by_cp.insert(0x0121, String::from("&gdot;"));
    by_cp.insert(0x0122, String::from("&Gcedil;"));
    by_cp.insert(0x0124, String::from("&Hcirc;"));
    by_cp.insert(0x0125, String::from("&hcirc;"));
    by_cp.insert(0x0126, String::from("&Hstrok;"));
    by_cp.insert(0x0127, String::from("&hstrok;"));
    by_cp.insert(0x0128, String::from("&Itilde;"));
    by_cp.insert(0x0129, String::from("&itilde;"));
    by_cp.insert(0x012A, String::from("&Imacr;"));
    by_cp.insert(0x012B, String::from("&imacr;"));
    by_cp.insert(0x012E, String::from("&Iogon;"));
    by_cp.insert(0x012F, String::from("&iogon;"));
    by_cp.insert(0x0130, String::from("&Idot;"));
    by_cp.insert(0x0131, String::from("&imath;"));
    by_cp.insert(0x0132, String::from("&IJlig;"));
    by_cp.insert(0x0133, String::from("&ijlig;"));
    by_cp.insert(0x0134, String::from("&Jcirc;"));
    by_cp.insert(0x0135, String::from("&jcirc;"));
    by_cp.insert(0x0136, String::from("&Kcedil;"));
    by_cp.insert(0x0137, String::from("&kcedil;"));
    by_cp.insert(0x0138, String::from("&kgreen;"));
    by_cp.insert(0x013A, String::from("&lacute;"));
    by_cp.insert(0x013B, String::from("&Lcedil;"));
    by_cp.insert(0x013C, String::from("&lcedil;"));
    by_cp.insert(0x013D, String::from("&Lcaron;"));
    by_cp.insert(0x013E, String::from("&lcaron;"));
    by_cp.insert(0x013F, String::from("&Lmidot;"));
    by_cp.insert(0x0140, String::from("&lmidot;"));
    by_cp.insert(0x0141, String::from("&Lstrok;"));
    by_cp.insert(0x0142, String::from("&lstrok;"));
    by_cp.insert(0x0143, String::from("&Nacute;"));
    by_cp.insert(0x0144, String::from("&nacute;"));
    by_cp.insert(0x0145, String::from("&Ncedil;"));
    by_cp.insert(0x0146, String::from("&ncedil;"));
    by_cp.insert(0x0147, String::from("&Ncaron;"));
    by_cp.insert(0x0148, String::from("&ncaron;"));
    by_cp.insert(0x0149, String::from("&napos;"));
    by_cp.insert(0x014A, String::from("&ENG;"));
    by_cp.insert(0x014B, String::from("&eng;"));
    by_cp.insert(0x014C, String::from("&Omacr;"));
    by_cp.insert(0x014D, String::from("&omacr;"));
    by_cp.insert(0x0150, String::from("&Odblac;"));
    by_cp.insert(0x0151, String::from("&odblac;"));
    by_cp.insert(0x0152, String::from("&OElig;"));
    by_cp.insert(0x0153, String::from("&oelig;"));
    by_cp.insert(0x0154, String::from("&Racute;"));
    by_cp.insert(0x0155, String::from("&racute;"));
    by_cp.insert(0x0156, String::from("&Rcedil;"));
    by_cp.insert(0x0157, String::from("&rcedil;"));
    by_cp.insert(0x0158, String::from("&Rcaron;"));
    by_cp.insert(0x0159, String::from("&rcaron;"));
    by_cp.insert(0x015A, String::from("&Sacute;"));
    by_cp.insert(0x015B, String::from("&sacute;"));
    by_cp.insert(0x015C, String::from("&Scirc;"));
    by_cp.insert(0x015D, String::from("&scirc;"));
    by_cp.insert(0x015E, String::from("&Scedil;"));
    by_cp.insert(0x015F, String::from("&scedil;"));
    by_cp.insert(0x0160, String::from("&Scaron;"));
    by_cp.insert(0x0161, String::from("&scaron;"));
    by_cp.insert(0x0162, String::from("&Tcedil;"));
    by_cp.insert(0x0163, String::from("&tcedil;"));
    by_cp.insert(0x0164, String::from("&Tcaron;"));
    by_cp.insert(0x0165, String::from("&tcaron;"));
    by_cp.insert(0x0166, String::from("&Tstrok;"));
    by_cp.insert(0x0167, String::from("&tstrok;"));
    by_cp.insert(0x0168, String::from("&Utilde;"));
    by_cp.insert(0x0169, String::from("&utilde;"));
    by_cp.insert(0x016A, String::from("&Umacr;"));
    by_cp.insert(0x016B, String::from("&umacr;"));
    by_cp.insert(0x016C, String::from("&Ubreve;"));
    by_cp.insert(0x016D, String::from("&ubreve;"));
    by_cp.insert(0x016E, String::from("&Uring;"));
    by_cp.insert(0x016F, String::from("&uring;"));
    by_cp.insert(0x0170, String::from("&Udblac;"));
    by_cp.insert(0x0171, String::from("&udblac;"));
    by_cp.insert(0x0172, String::from("&Uogon;"));
    by_cp.insert(0x0173, String::from("&uogon;"));
    by_cp.insert(0x0174, String::from("&Wcirc;"));
    by_cp.insert(0x0175, String::from("&wcirc;"));
    by_cp.insert(0x0176, String::from("&Ycirc;"));
    by_cp.insert(0x0177, String::from("&ycirc;"));
    by_cp.insert(0x0178, String::from("&Yuml;"));
    by_cp.insert(0x0179, String::from("&Zacute;"));
    by_cp.insert(0x017A, String::from("&zacute;"));
    by_cp.insert(0x017B, String::from("&Zdot;"));
    by_cp.insert(0x017C, String::from("&zdot;"));
    by_cp.insert(0x017D, String::from("&Zcaron;"));
    by_cp.insert(0x017E, String::from("&zcaron;"));
    by_cp.insert(0x0311, String::from("&DownBreve;"));
    by_cp.insert(0x21BA, String::from("&olarr;"));
    by_cp.insert(0x21BB, String::from("&orarr;"));
    by_cp.insert(0x21BC, String::from("&lharu;"));
    by_cp.insert(0x21BD, String::from("&lhard;"));
    by_cp.insert(0x21BE, String::from("&uharr;"));
    by_cp.insert(0x21BF, String::from("&uharl;"));
    by_cp.insert(0x21C0, String::from("&rharu;"));
    by_cp.insert(0x21C1, String::from("&rhard;"));
    by_cp.insert(0x21C2, String::from("&dharr;"));
    by_cp.insert(0x21C3, String::from("&dharl;"));
    by_cp.insert(0x21C4, String::from("&rlarr;"));
    by_cp.insert(0x21C5, String::from("&udarr;"));
    by_cp.insert(0x21C6, String::from("&lrarr;"));
    by_cp.insert(0x21C7, String::from("&llarr;"));
    by_cp.insert(0x21C8, String::from("&uuarr;"));
    by_cp.insert(0x21C9, String::from("&rrarr;"));
    by_cp.insert(0x21CA, String::from("&ddarr;"));
    by_cp.insert(0x21CB, String::from("&lrhar;"));
    by_cp.insert(0x21CC, String::from("&rlhar;"));
    by_cp.insert(0x21CD, String::from("&nlArr;"));
    by_cp.insert(0x21CE, String::from("&nhArr;"));
    by_cp.insert(0x21CF, String::from("&nrArr;"));
    by_cp.insert(0x21D0, String::from("&lArr;"));
    by_cp.insert(0x21D1, String::from("&uArr;"));
    by_cp.insert(0x21D2, String::from("&rArr;"));
    by_cp.insert(0x21D3, String::from("&dArr;"));
    by_cp.insert(0x21D4, String::from("&hArr;"));
    by_cp.insert(0x21D5, String::from("&vArr;"));
    by_cp.insert(0x21D6, String::from("&nwArr;"));
    by_cp.insert(0x21D7, String::from("&neArr;"));
    by_cp.insert(0x21D8, String::from("&seArr;"));
    by_cp.insert(0x21D9, String::from("&swArr;"));
    by_cp.insert(0x21DA, String::from("&lAarr;"));
    by_cp.insert(0x21DB, String::from("&rAarr;"));
    by_cp.insert(0x21DC, String::from("&ziglarr;"));
    by_cp.insert(0x21DD, String::from("&zigrarr;"));
    by_cp.insert(0x21E4, String::from("&larrb;"));
    by_cp.insert(0x21E5, String::from("&rarrb;"));
    by_cp.insert(0x21F5, String::from("&duarr;"));
    by_cp.insert(0x21FF, String::from("&hoarr;"));
    by_cp.insert(0x21FD, String::from("&loarr;"));
    by_cp.insert(0x21FE, String::from("&roarr;"));
    by_cp.insert(0x27F5, String::from("&xlarr;"));
    by_cp.insert(0x27F6, String::from("&xrarr;"));
    by_cp.insert(0x27F7, String::from("&xharr;"));
    by_cp.insert(0x27F8, String::from("&xlArr;"));
    by_cp.insert(0x27F9, String::from("&xrArr;"));
    by_cp.insert(0x27FA, String::from("&xhArr;"));
    by_cp.insert(0x27FF, String::from("&dzigrarr;"));
    by_cp.insert(0x27FC, String::from("&xmap;"));
    by_cp.insert(0x2902, String::from("&nvlArr;"));
    by_cp.insert(0x2903, String::from("&nvrArr;"));
    by_cp.insert(0x2904, String::from("&nvHarr;"));
    by_cp.insert(0x2905, String::from("&Map;"));
    by_cp.insert(0x290C, String::from("&lbarr;"));
    by_cp.insert(0x290D, String::from("&rbarr;"));
    by_cp.insert(0x290E, String::from("&lBarr;"));
    by_cp.insert(0x290F, String::from("&rBarr;"));
    by_cp.insert(0x2910, String::from("&RBarr;"));
    by_cp.insert(0x2911, String::from("&DDotrahd;"));
    by_cp.insert(0x2912, String::from("&UpArrowBar;"));
    by_cp.insert(0x2913, String::from("&DownArrowBar;"));
    by_cp.insert(0x2916, String::from("&Rarrtl;"));
    by_cp.insert(0x2919, String::from("&latail;"));
    by_cp.insert(0x291A, String::from("&ratail;"));
    by_cp.insert(0x291B, String::from("&lAtail;"));
    by_cp.insert(0x291C, String::from("&rAtail;"));
    by_cp.insert(0x291D, String::from("&larrfs;"));
    by_cp.insert(0x291E, String::from("&rarrfs;"));
    by_cp.insert(0x291F, String::from("&larrbfs;"));
    by_cp.insert(0x2920, String::from("&rarrbfs;"));
    by_cp.insert(0x2923, String::from("&nwarhk;"));
    by_cp.insert(0x2924, String::from("&nearhk;"));
    by_cp.insert(0x2925, String::from("&searhk;"));
    by_cp.insert(0x2926, String::from("&swarhk;"));
    by_cp.insert(0x2927, String::from("&nwnear;"));
    by_cp.insert(0x2928, String::from("&nesear;"));
    by_cp.insert(0x2929, String::from("&seswar;"));
    by_cp.insert(0x292A, String::from("&swnwar;"));
    by_cp.insert(0x2935, String::from("&cudarrr;"));
    by_cp.insert(0x2936, String::from("&ldca;"));
    by_cp.insert(0x2937, String::from("&rdca;"));
    by_cp.insert(0x2938, String::from("&cudarrl;"));
    by_cp.insert(0x2939, String::from("&larrpl;"));
    by_cp.insert(0x293C, String::from("&curarrm;"));
    by_cp.insert(0x293D, String::from("&cularrp;"));
    by_cp.insert(0x2945, String::from("&rarrpl;"));
    by_cp.insert(0x2948, String::from("&harrcir;"));
    by_cp.insert(0x2949, String::from("&Uarrocir;"));
    by_cp.insert(0x294A, String::from("&lurdshar;"));
    by_cp.insert(0x294B, String::from("&ldrushar;"));
    by_cp.insert(0x294F, String::from("&RightUpDownVector;"));
    by_cp.insert(0x2950, String::from("&DownLeftRightVector;"));
    by_cp.insert(0x2951, String::from("&LeftUpDownVector;"));
    by_cp.insert(0x2952, String::from("&LeftVectorBar;"));
    by_cp.insert(0x2953, String::from("&RightVectorBar;"));
    by_cp.insert(0x2954, String::from("&RightUpVectorBar;"));
    by_cp.insert(0x2955, String::from("&RightDownVectorBar;"));
    by_cp.insert(0x2956, String::from("&DownLeftVectorBar;"));
    by_cp.insert(0x2957, String::from("&DownRightVectorBar;"));
    by_cp.insert(0x2958, String::from("&LeftUpVectorBar;"));
    by_cp.insert(0x2959, String::from("&LeftDownVectorBar;"));
    by_cp.insert(0x295A, String::from("&LeftTeeVector;"));
    by_cp.insert(0x295B, String::from("&RightTeeVector;"));
    by_cp.insert(0x295C, String::from("&RightUpTeeVector;"));
    by_cp.insert(0x295D, String::from("&RightDownTeeVector;"));
    by_cp.insert(0x295E, String::from("&DownLeftTeeVector;"));
    by_cp.insert(0x295F, String::from("&DownRightTeeVector;"));
    by_cp.insert(0x2960, String::from("&LeftUpTeeVector;"));
    by_cp.insert(0x2961, String::from("&LeftDownTeeVector;"));
    by_cp.insert(0x2962, String::from("&lHar;"));
    by_cp.insert(0x2963, String::from("&uHar;"));
    by_cp.insert(0x2964, String::from("&rHar;"));
    by_cp.insert(0x2965, String::from("&dHar;"));
    by_cp.insert(0x2966, String::from("&luruhar;"));
    by_cp.insert(0x2967, String::from("&ldrdhar;"));
    by_cp.insert(0x2968, String::from("&ruluhar;"));
    by_cp.insert(0x2969, String::from("&rdldhar;"));
    by_cp.insert(0x296A, String::from("&lharul;"));
    by_cp.insert(0x296B, String::from("&llhard;"));
    by_cp.insert(0x296C, String::from("&rharul;"));
    by_cp.insert(0x296D, String::from("&lrhard;"));
    by_cp.insert(0x296E, String::from("&udhar;"));
    by_cp.insert(0x296F, String::from("&duhar;"));
    by_cp.insert(0x2970, String::from("&RoundImplies;"));
    by_cp.insert(0x2971, String::from("&erarr;"));
    by_cp.insert(0x2972, String::from("&simrarr;"));
    by_cp.insert(0x2973, String::from("&larrsim;"));
    by_cp.insert(0x2974, String::from("&rarrsim;"));
    by_cp.insert(0x2975, String::from("&rarrap;"));
    by_cp.insert(0x2976, String::from("&ltlarr;"));
    by_cp.insert(0x2978, String::from("&gtrarr;"));
    by_cp.insert(0x2979, String::from("&subrarr;"));
    by_cp.insert(0x297B, String::from("&suplarr;"));
    by_cp.insert(0x297C, String::from("&lfisht;"));
    by_cp.insert(0x297D, String::from("&rfisht;"));
    by_cp.insert(0x297E, String::from("&ufisht;"));
    by_cp.insert(0x297F, String::from("&dfisht;"));

    let mut by_name = HashMap::<String, u32>::new();
    for (cp, name) in &by_cp {
        by_name.insert(name.clone(), *cp);
    }

    return (by_cp, by_name);
}